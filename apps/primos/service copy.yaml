apiVersion: v1
kind: Service
metadata:
  name: prime-server-service
  namespace: default
  labels:
    app: prime-server
    tier: backend
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: "nlb"
    service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled: "true"
spec:
  type: ClusterIP
  ports:
  - name: http
    port: 80
    targetPort: 5000
    protocol: TCP
  selector:
    app: prime-server
  sessionAffinity: None

---
apiVersion: v1
kind: Service
metadata:
  name: prime-server-nodeport
  namespace: default
  labels:
    app: prime-server
    tier: backend
    service-type: nodeport
spec:
  type: NodePort
  ports:
  - name: http
    port: 5000
    targetPort: 5000
    nodePort: 30080
    protocol: TCP
  selector:
    app: prime-server
  sessionAffinity: None

---
apiVersion: v1
kind: Service
metadata:
  name: prime-server-loadbalancer
  namespace: default
  labels:
    app: prime-server
    tier: backend
    service-type: loadbalancer
  annotations:
    # AWS Load Balancer Controller annotations
    service.beta.kubernetes.io/aws-load-balancer-type: "external"
    service.beta.kubernetes.io/aws-load-balancer-nlb-target-type: "ip"
    service.beta.kubernetes.io/aws-load-balancer-scheme: "internet-facing"
    # GCP Load Balancer annotations
    cloud.google.com/load-balancer-type: "External"
    # Azure Load Balancer annotations
    service.beta.kubernetes.io/azure-load-balancer-internal: "false"
spec:
  type: LoadBalancer
  ports:
  - name: http
    port: 80
    targetPort: 5000
    protocol: TCP
  selector:
    app: prime-server
  sessionAffinity: None