apiVersion: v1
kind: ConfigMap
metadata:
  name: prime-server-config
  namespace: default
  labels:
    app: prime-server
data:
  # Application configuration
  app.conf: |
    [server]
    host=0.0.0.0
    port=5000
    workers=4
    max_primes_per_request=10000
    
    [logging]
    level=INFO
    format=%(asctime)s - %(name)s - %(levelname)s - %(message)s
    
    [performance]
    request_timeout=30
    max_concurrent_requests=100

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: prime-server-ingress
  namespace: default
  labels:
    app: prime-server
  annotations:
    # NGINX Ingress Controller
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/use-regex: "true"
    
    # Rate limiting
    nginx.ingress.kubernetes.io/rate-limit: "100"
    nginx.ingress.kubernetes.io/rate-limit-window: "1m"
    
    # Load balancing
    nginx.ingress.kubernetes.io/load-balance: "round_robin"
    
    # Timeouts
    nginx.ingress.kubernetes.io/proxy-connect-timeout: "30"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "30"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "30"
    
    # SSL/TLS
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    
    # AWS ALB Ingress Controller (alternative)
    # kubernetes.io/ingress.class: "alb"
    # alb.ingress.kubernetes.io/scheme: internet-facing
    # alb.ingress.kubernetes.io/target-type: ip
    # alb.ingress.kubernetes.io/healthcheck-path: /health
    
    # Traefik (alternative)
    # kubernetes.io/ingress.class: "traefik"
    # traefik.ingress.kubernetes.io/router.middlewares: default-ratelimit@kubernetescrd
spec:
  tls:
  - hosts:
    - prime-server.example.com
    - api.prime-server.example.com
    secretName: prime-server-tls
  
  rules:
  - host: prime-server.example.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: prime-server-service
            port:
              number: 80
  
  - host: api.prime-server.example.com
    http:
      paths:
      - path: /primes
        pathType: Prefix
        backend:
          service:
            name: prime-server-service
            port:
              number: 80
      - path: /health
        pathType: Exact
        backend:
          service:
            name: prime-server-service
            port:
              number: 80
      - path: /logs
        pathType: Exact
        backend:
          service:
            name: prime-server-service
            port:
              number: 80

---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: prime-server-netpol
  namespace: default
  labels:
    app: prime-server
spec:
  podSelector:
    matchLabels:
      app: prime-server
  policyTypes:
  - Ingress
  - Egress
  
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          name: ingress-nginx
    - podSelector:
        matchLabels:
          app: nginx-ingress
    ports:
    - protocol: TCP
      port: 5000
  
  egress:
  - to: []
    ports:
    - protocol: TCP
      port: 53
    - protocol: UDP
      port: 53
  - to:
    - namespaceSelector: {}
    ports:
    - protocol: TCP
      port: 443
    - protocol: TCP
      port: 80