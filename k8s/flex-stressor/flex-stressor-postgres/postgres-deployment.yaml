apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-config
data:
  POSTGRES_DB: stressdb
  POSTGRES_USER: postgres
  POSTGRES_PASSWORD: postgres123
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 2Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
      - name: postgres
        image: postgres:15
        ports:
        - containerPort: 5432
        envFrom:
        - configMapRef:
            name: postgres-config
        volumeMounts:
        - name: postgres-storage
          mountPath: /var/lib/postgresql/data
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "1000m"
      volumes:
      - name: postgres-storage
        persistentVolumeClaim:
          claimName: postgres-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: postgres-service
spec:
  selector:
    app: postgres
  ports:
    - protocol: TCP
      port: 5432
      targetPort: 5432
  type: ClusterIP
---
# stress-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: stress-postgres-python
spec:
  replicas: 1
  selector:
    matchLabels:
      app: stress-postgres-python
  template:
    metadata:
      labels:
        app: stress-postgres-python
    spec:
      containers:
      - name: stress-app
        image: stress-postgres-python:latest
        env:
        - name: CPU_CORES
          value: "2"
        - name: MEMORY_MB
          value: "512"
        - name: DURATION_SEC
          value: "600"
        - name: DB_CONNECTIONS
          value: "15"
        - name: DB_HOST
          value: "postgres-service"
        - name: DB_PORT
          value: "5432"
        - name: DB_USER
          value: "postgres"
        - name: DB_PASSWORD
          value: "password"
        - name: DB_NAME
          value: "stressdb"
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "1Gi"
            cpu: "1000m"
        livenessProbe:
          exec:
            command:
            - python
            - -c
            - "import psutil; exit(0 if psutil.cpu_percent() >= 0 else 1)"
          initialDelaySeconds: 30
          periodSeconds: 30
        readinessProbe:
          exec:
            command:
            - python
            - -c
            - "import asyncpg; exit(0)"
          initialDelaySeconds: 10
          periodSeconds: 10
